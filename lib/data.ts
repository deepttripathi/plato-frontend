// Mock data for the application

export enum Status {
  Submitted = "submitted",
  Scheduled = "scheduled",
  Success = "success",
  Failed = "failed"
}

// Users
export const users = [
  {
    id: "user-1",
    name: "Minh Duong",
    email: "Minh.Duong@creditone.com",
    role: "admin" as const,
    team: "Platform Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-2",
    name: "Rahul Narendra Sadhwani",
    email: "RahulNarendra.Sadhwani@creditone.com",
    role: "admin" as const,
    team: "Platform Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-3",
    name: "Brandon Cabael",
    email: "Brandon.Cabael@creditone.com",
    role: "admin" as const,
    team: "Platform Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-4",
    name: "Anand Shrivastava",
    email: "Anand.Shrivastava@creditone.com",
    role: "admin" as const,
    team: "Platform Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-5",
    name: "Ekta Nariya",
    email: "Ekta.Nariya@creditone.com",
    role: "admin" as const,
    team: "Platform Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-6",
    name: "James Munguia",
    email: "James.Munguia@creditone.com",
    role: "admin" as const,
    team: "Platform Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-7",
    name: "Robert Taylor",
    email: "robert.taylor@creditone.com",
    role: "user" as const,
    team: "WinSys",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-8",
    name: "Jennifer Anderson",
    email: "jennifer.anderson@creditone.com",
    role: "user" as const,
    team: "UNIX Engineering",
    avatar: "/placeholder.svg?height=32&width=32",
  },
  {
    id: "user-8",
    name: "Sarah Connor",
    email: "Sarah.Connor@creditone.com",
    role: "user" as const,
    team: "DevOps",
    avatar: "/placeholder.svg?height=32&width=32",
  },
]

// Teams
export const teams = [
  {
    id: "team-1",
    name: "Platform",
    description: "Platform team responsible for infrastructure and tooling",
    memberCount: 3,
    automationCount: 5,
  },
  {
    id: "team-2",
    name: "Data",
    description: "Data team responsible for data engineering and analytics",
    memberCount: 5,
    automationCount: 8,
  },
  {
    id: "team-3",
    name: "DevOps",
    description: "DevOps team responsible for CI/CD and deployment",
    memberCount: 4,
    automationCount: 6,
  },
  {
    id: "team-4",
    name: "Security",
    description: "Security team responsible for security and compliance",
    memberCount: 3,
    automationCount: 4,
  },
  {
    id: "team-5",
    name: "Frontend",
    description: "Frontend team responsible for UI/UX",
    memberCount: 6,
    automationCount: 2,
  },
  {
    id: "team-6",
    name: "Backend",
    description: "Backend team responsible for APIs and services",
    memberCount: 7,
    automationCount: 3,
  },
]



// Automations
export const automations = [
  {
    id: "elk-data-view",
    name: "ELK Data View Creation",
    description: "Create a new data view in Elasticsearch/Kibana",
    // category: "data",
    createdBy: "Sarah Johnson",
    createdAt: "2024-10-15T10:30:00Z",
    lastRun: "2024-12-01T14:22:00Z",
    lastStatus: "success",
    teams: ["Data", "DevOps", "Platform"],
    technicalDetails: "Uses Elasticsearch API to create index patterns and data views in Kibana",
    history: [
      {
        timestamp: "2024-12-01T14:22:00Z",
        user: "Michael Brown",
        status: Status.Success,
      },
      {
        timestamp: "2024-11-15T09:45:00Z",
        user: "Sarah Johnson",
        status: Status.Submitted,
      },
      {
        timestamp: "2024-10-30T11:20:00Z",
        user: "Jennifer Anderson",
        status: Status.Failed,
      },
    ],
  },
  {
    id: "db-backup",
    name: "Database Backup",
    description: "Create a backup of a database",
    // category: "data",
    createdBy: "John Smith",
    createdAt: "2024-09-20T08:15:00Z",
    lastRun: "2024-11-28T23:00:00Z",
    lastStatus: "success",
    teams: ["Data", "Backend", "Platform"],
    technicalDetails: "Uses database native backup tools to create a backup and store it in S3",
    parameters: [
      {
        name: "Database Name",
        type: "text",
        placeholder: "users_db",
        default: "",
        required: true,
      },
      {
        name: "Backup Type",
        type: "select",
        options: ["Full", "Incremental", "Differential"],
        default: "Full",
        required: true,
      },
      {
        name: "Storage Location",
        type: "text",
        placeholder: "s3://backups/",
        default: "s3://backups/",
        required: true,
      },
    ],
    history: [
      {
        timestamp: "2024-11-28T23:00:00Z",
        user: "Robert Taylor",
        status: Status.Success,
      },
      {
        timestamp: "2024-11-21T23:00:00Z",
        user: "Robert Taylor",
        status: Status.Failed,
      },
      {
        timestamp: "2024-11-14T23:00:00Z",
        user: "Robert Taylor",
        status: Status.Scheduled,
      },
    ],
  },
  {
    id: "log-analysis",
    name: "Log Analysis",
    description: "Analyze logs for errors and anomalies",
    // category: "monitoring",
    createdBy: "David Wilson",
    createdAt: "2024-08-10T15:45:00Z",
    lastRun: "2024-11-30T08:15:00Z",
    lastStatus: "failed",
    teams: ["Security", "DevOps", "Platform"],
    technicalDetails: "Uses ELK stack to analyze logs and detect anomalies",
    parameters: [
      {
        name: "Log Source",
        type: "select",
        options: ["Application Logs", "System Logs", "Security Logs", "Access Logs"],
        default: "Application Logs",
        required: true,
      },
      {
        name: "Time Range",
        type: "select",
        options: ["Last 1 hour", "Last 24 hours", "Last 7 days", "Last 30 days"],
        default: "Last 24 hours",
        required: true,
      },
      {
        name: "Alert Threshold",
        type: "text",
        placeholder: "10",
        default: "10",
        description: "Number of errors to trigger an alert",
        required: true,
      },
    ],
    history: [
      {
        timestamp: "2024-11-30T08:15:00Z",
        user: "David Wilson",
        status: Status.Submitted,
      },
      {
        timestamp: "2024-11-29T08:15:00Z",
        user: "David Wilson",
        status: Status.Submitted,
      },
      {
        timestamp: "2024-11-28T08:15:00Z",
        user: "David Wilson",
        status: Status.Scheduled,
      },
    ],
  },
  {
    id: "server-provision",
    name: "Server Provisioning",
    description: "Provision a new server in the cloud",
    // category: "infrastructure",
    createdBy: "John Smith",
    createdAt: "2024-07-05T11:30:00Z",
    lastRun: "2024-11-25T10:45:00Z",
    lastStatus: "success",
    teams: ["DevOps", "Platform"],
    technicalDetails: "Uses Terraform to provision servers in AWS/GCP/Azure",
    parameters: [
      {
        name: "Cloud Provider",
        type: "select",
        options: ["AWS", "GCP", "Azure"],
        default: "AWS",
        required: true,
      },
      {
        name: "Instance Type",
        type: "text",
        placeholder: "t2.micro",
        default: "t2.micro",
        required: true,
      },
      {
        name: "Region",
        type: "select",
        options: ["us-east-1", "us-west-2", "eu-west-1", "ap-southeast-1"],
        default: "us-east-1",
        required: true,
      },
      {
        name: "Tags",
        type: "textarea",
        placeholder: "key1=value1\nkey2=value2",
        default: "environment=dev\nmanaged-by=automation",
        required: false,
      },
    ],
    history: [
      {
        timestamp: "2024-11-25T10:45:00Z",
        user: "Emily Davis",
        status: Status.Scheduled,
      },
      {
        timestamp: "2024-11-10T14:30:00Z",
        user: "Emily Davis",
        status: Status.Success,
      },
      {
        timestamp: "2024-10-28T09:15:00Z",
        user: "John Smith",
        status: Status.Failed,
      },
    ],
  },
  {
    id: "api-key-rotation",
    name: "API Key Rotation",
    description: "Rotate API keys for security",
    // category: "security",
    createdBy: "David Wilson",
    createdAt: "2024-06-18T09:00:00Z",
    lastRun: "2024-11-27T16:30:00Z",
    lastStatus: "success",
    teams: ["Security", "Platform"],
    technicalDetails: "Rotates API keys for various services and updates references",
    parameters: [
      {
        name: "Service",
        type: "select",
        options: ["AWS", "GitHub", "Stripe", "Twilio", "SendGrid"],
        default: "AWS",
        required: true,
      },
      {
        name: "Key Age Threshold (days)",
        type: "text",
        placeholder: "90",
        default: "90",
        description: "Rotate keys older than this threshold",
        required: true,
      },
      {
        name: "Notification Email",
        type: "email",
        placeholder: "security@creditone.com",
        default: "security@creditone.com",
        required: true,
      },
    ],
    history: [
      {
        timestamp: "2024-11-27T16:30:00Z",
        user: "David Wilson",
        status: Status.Success,
      },
      {
        timestamp: "2024-10-27T16:30:00Z",
        user: "David Wilson",
        status: Status.Failed,
      },
      {
        timestamp: "2024-09-27T16:30:00Z",
        user: "David Wilson",
        status: Status.Submitted,
      },
    ],
  },
  {
    id: "code-deploy",
    name: "Code Deployment",
    description: "Deploy code to production",
    // category: "deployment",
    createdBy: "Emily Davis",
    createdAt: "2024-05-22T13:45:00Z",
    lastRun: "2024-11-29T11:00:00Z",
    lastStatus: "success",
    teams: ["DevOps", "Frontend", "Backend"],
    technicalDetails: "Uses CI/CD pipeline to deploy code to production",
    parameters: [
      {
        name: "Repository",
        type: "text",
        placeholder: "org/repo",
        default: "",
        required: true,
      },
      {
        name: "Branch",
        type: "text",
        placeholder: "main",
        default: "main",
        required: true,
      },
      {
        name: "Environment",
        type: "select",
        options: ["Development", "Staging", "Production"],
        default: "Staging",
        required: true,
      },
      {
        name: "Deploy Strategy",
        type: "select",
        options: ["Blue/Green", "Canary", "Rolling"],
        default: "Blue/Green",
        required: true,
      },
    ],
    history: [
      {
        timestamp: "2024-11-29T11:00:00Z",
        user: "Jessica Martinez",
        status: Status.Success,
      },
      {
        timestamp: "2024-11-22T10:30:00Z",
        user: "Robert Taylor",
        status: Status.Failed,
      },
      {
        timestamp: "2024-11-15T14:45:00Z",
        user: "Emily Davis",
        status: Status.Submitted,
      },
    ],
  },
]

// History entries
export const historyEntries = [
  {
    id: "history-1",
    automationId: "elk-data-view",
    automationName: "ELK Data View Creation",
    user: "Michael Brown",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Data",
    timestamp: "2024-12-01T14:22:00Z",
    status: Status.Success,
    duration: "45s",
  },
  {
    id: "history-2",
    automationId: "log-analysis",
    automationName: "Log Analysis",
    user: "David Wilson",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Security",
    timestamp: "2024-11-30T08:15:00Z",
    status: Status.Submitted,
    duration: "2m 10s",
    error: "Failed to connect to log source",
  },
  {
    id: "history-3",
    automationId: "code-deploy",
    automationName: "Code Deployment",
    user: "Jessica Martinez",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Frontend",
    timestamp: "2024-11-29T11:00:00Z",
    status: Status.Success,
    duration: "3m 25s",
  },
  {
    id: "history-4",
    automationId: "db-backup",
    automationName: "Database Backup",
    user: "Robert Taylor",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Backend",
    timestamp: "2024-11-28T23:00:00Z",
    status: Status.Success,
    duration: "5m 12s",
  },
  {
    id: "history-5",
    automationId: "api-key-rotation",
    automationName: "API Key Rotation",
    user: "David Wilson",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Security",
    timestamp: "2024-11-27T16:30:00Z",
    status: Status.Success,
    duration: "1m 45s",
  },
  {
    id: "history-6",
    automationId: "server-provision",
    automationName: "Server Provisioning",
    user: "Emily Davis",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "DevOps",
    timestamp: "2024-11-25T10:45:00Z",
    status: Status.Scheduled,
    duration: "4m 30s",
  },
  {
    id: "history-7",
    automationId: "code-deploy",
    automationName: "Code Deployment",
    user: "Robert Taylor",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Backend",
    timestamp: "2024-11-22T10:30:00Z",
    status: Status.Failed,
    duration: "3m 15s",
  },
  {
    id: "history-8",
    automationId: "elk-data-view",
    automationName: "ELK Data View Creation",
    user: "Sarah Johnson",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Data",
    timestamp: "2024-11-15T09:45:00Z",
    status: Status.Submitted,
    duration: "40s",
  },
  {
    id: "history-9",
    automationId: "code-deploy",
    automationName: "Code Deployment",
    user: "Emily Davis",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "DevOps",
    timestamp: "2024-11-15T14:45:00Z",
    status: Status.Submitted,
    duration: "2m 50s",
    error: "Failed to deploy to production environment",
  },
  {
    id: "history-10",
    automationId: "server-provision",
    automationName: "Server Provisioning",
    user: "Emily Davis",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "DevOps",
    timestamp: "2024-11-10T14:30:00Z",
    status: Status.Success,
    duration: "4m 15s",
  },
  {
    id: "history-11",
    automationId: "elk-data-view",
    automationName: "ELK Data View Creation",
    user: "Jennifer Anderson",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Data",
    timestamp: "2024-10-30T11:20:00Z",
    status: Status.Failed,
    duration: "1m 05s",
    error: "Invalid index pattern",
  },
  {
    id: "history-12",
    automationId: "server-provision",
    automationName: "Server Provisioning",
    user: "John Smith",
    userAvatar: "/placeholder.svg?height=32&width=32",
    team: "Platform",
    timestamp: "2024-10-28T09:15:00Z",
    status: Status.Failed,
    duration: "3m 40s",
    error: "Insufficient permissions",
  },
]

// Audit logs
export const auditLogs = [
  {
    id: "audit-1",
    category: "users",
    action: "User created",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-30T15:45:00Z",
    details: "Created user Jessica Martinez",
  },
  {
    id: "audit-2",
    category: "automations",
    action: "Automation created",
    user: "Sarah Johnson",
    team: "Data",
    timestamp: "2024-11-29T11:30:00Z",
    details: "Created automation Data Quality Check",
  },
  {
    id: "audit-3",
    category: "system",
    action: "System settings updated",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-28T14:20:00Z",
    details: "Updated security settings",
  },
  {
    id: "audit-4",
    category: "users",
    action: "User role changed",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-27T10:15:00Z",
    details: "Changed role of Michael Brown from user to admin",
  },
  {
    id: "audit-5",
    category: "automations",
    action: "Automation deleted",
    user: "Sarah Johnson",
    team: "Data",
    timestamp: "2024-11-26T16:40:00Z",
    details: "Deleted automation Legacy Data Migration",
  },
  {
    id: "audit-6",
    category: "system",
    action: "Maintenance mode enabled",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-25T09:30:00Z",
    details: "Enabled maintenance mode for system updates",
  },
  {
    id: "audit-7",
    category: "users",
    action: "User team changed",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-24T13:50:00Z",
    details: "Changed team of Robert Taylor from Frontend to Backend",
  },
  {
    id: "audit-8",
    category: "automations",
    action: "Automation updated",
    user: "David Wilson",
    team: "Security",
    timestamp: "2024-11-23T11:25:00Z",
    details: "Updated parameters for API Key Rotation",
  },
  {
    id: "audit-9",
    category: "system",
    action: "Maintenance mode disabled",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-25T11:45:00Z",
    details: "Disabled maintenance mode after system updates",
  },
  {
    id: "audit-10",
    category: "users",
    action: "User deleted",
    user: "John Smith",
    team: "Platform",
    timestamp: "2024-11-22T15:30:00Z",
    details: "Deleted user Alex Johnson",
  },
]

// Proposals
export const proposals = [
  {
    id: "proposal-1",
    title: "Create Bulk ELK Data View",
    description: "Create ELK Data View in bulks",
    proposedBy: "Rahul Narendra Sadhwani",
    proposedAt: "2025-04-28T10:15:00Z",
    status: "pending",
    teams: ["Platform Engineering", "Development"],
    benefits: [
      "Reduce manual effort in ELK Data View Creation",
    ],
  },
  {
    id: "proposal-2",
    title: "Automated DataStream Rollover",
    description: "Implement automated rollover for Elasticsearch DataStreams based on size and time thresholds",
    proposedBy: "Brandon Cabael",
    proposedAt: "2025-04-25T09:30:00Z",
    status: "approved",
    teams: ["Platform Engineering", "DevOps"],
    benefits: [
      "Prevent indices from growing too large",
      "Maintain optimal performance",
      "Reduce manual maintenance overhead"
    ],
  },
  {
    id: "proposal-3",
    title: "DataStream Last Updated Monitor",
    description: "Tool to track and report last updated timestamps for all DataStreams",
    proposedBy: "Minh Duong",
    proposedAt: "2025-04-24T14:20:00Z",
    status: "in-review",
    teams: ["Platform Engineering", "Data"],
    benefits: [
      "Quick identification of stale data streams",
      "Better data freshness monitoring",
      "Automated alerting for data delays"
    ],
  },
  {
    id: "proposal-4",
    title: "Logstash Metrics Dashboard",
    description: "Comprehensive dashboard for monitoring Logstash performance metrics",
    proposedBy: "Anand Shrivastava",
    proposedAt: "2025-04-23T11:45:00Z",
    status: "pending",
    teams: ["Platform Engineering", "DevOps"],
    benefits: [
      "Real-time Logstash performance monitoring",
      "Historical metrics analysis",
      "Proactive issue detection"
    ],
  },
  {
    id: "proposal-5",
    title: "Logstash Pipeline Analytics",
    description: "Detailed metrics and analytics for individual Logstash pipeline performance",
    proposedBy: "Ekta Nariya",
    proposedAt: "2025-04-22T16:10:00Z",
    status: "in-review",
    teams: ["Platform Engineering", "Data"],
    benefits: [
      "Pipeline-specific performance insights",
      "Bottleneck identification",
      "Capacity planning support"
    ],
  },
  {
    id: "proposal-6",
    title: "Bulk Log Export Tool",
    description: "Tool for downloading large log sets (>1000 documents) with pagination and formatting options",
    proposedBy: "James Munguia",
    proposedAt: "2025-04-21T13:25:00Z",
    status: "approved",
    teams: ["Platform Engineering", "Security"],
    benefits: [
      "Efficient handling of large log exports",
      "Multiple export format support",
      "Automated pagination handling"
    ],
  },
  {
    id: "proposal-7",
    title: "JSON-Based Index Creator",
    description: "Tool to create Elasticsearch indices from JSON schema definitions",
    proposedBy: "Sarah Connor",
    proposedAt: "2025-04-20T15:55:00Z",
    status: "pending",
    teams: ["Platform Engineering", "Development"],
    benefits: [
      "Standardized index creation process",
      "Version control for index definitions",
      "Reduced configuration errors"
    ],
  }
]
